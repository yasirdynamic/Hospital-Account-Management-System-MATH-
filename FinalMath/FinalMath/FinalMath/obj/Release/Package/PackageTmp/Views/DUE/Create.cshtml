@model FinalMath.Models.DUE
@if (Session["Admin"] != null)
{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
else
{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutDirector.cshtml";
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>DUE</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">DUE</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

@using (Html.BeginForm("Create", "DUE", FormMethod.Post, new { enctype = "multipart/form-data" }))
{ 
    @Html.AntiForgeryToken()

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">

                        <h2>Create</h2>
                    </div>
                    <div class="form-horizontal">
                        <h4>DUE</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.DATE, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DATE, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DATE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.VOUCHER_NO, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.VOUCHER_NO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.VOUCHER_NO, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.VENDOR_FID, "VENDOR_FID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("VENDOR_FID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VENDOR_FID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.USER_FID, "USER_FID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("USER_FID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.USER_FID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HEAD_FID, "HEAD_FID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("HEAD_FID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.HEAD_FID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MODES_OF_PAYMENTS_FID, "MODES_OF_PAYMENTS_FID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("MODES_OF_PAYMENTS_FID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MODES_OF_PAYMENTS_FID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EXPENSE_AMOUNT, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EXPENSE_AMOUNT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EXPENSE_AMOUNT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.INCOME_AMOUNT, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.INCOME_AMOUNT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.INCOME_AMOUNT, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PIC, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="due_photo" />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DISTYPE_FID, "DISTYPE_FID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("DISTYPE_FID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DISTYPE_FID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DUESTYPE, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DUESTYPE, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DUESTYPE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-sm btn-success" />
                                <a href="@Url.Action("Index", "DUE")" class="btn btn-sm btn-primary">Back to List</a>

                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>

</section>
}